#:schema https://raw.githubusercontent.com/YunoHost/apps/master/schemas/manifest.v2.schema.json

packaging_format = 2

id = "example"
name = "Example app"
description.en = "Explain in *a few (10~15) words* the purpose of the app or what it actually does (it is meant to give a rough idea to users browsing a catalog of 100+ apps)"
description.fr = "Expliquez en *quelques* (10~15) mots l'utilité de l'app ou ce qu'elle fait (l'objectif est de donner une idée grossière pour des utilisateurs qui naviguent dans un catalogue de 100+ apps)"

version = "1.0~ynh1"

maintainers = ["johndoe"]

[upstream]
# NB: Only the "license" key is mandatory. Remove entries for which there's no relevant data
license = "free"
website = "https://example.com"
demo = "https://demo.example.com"
admindoc = "https://yunohost.org/packaging_apps"
userdoc = "https://yunohost.org/apps"
code = "https://some.forge.com/example/example"
# FIXME: optional but recommended if relevant, this is meant to contain the Common Platform Enumeration, which is
# sort of a standard id for applications defined by the NIST. In particular, YunoHost may use this is in the future
# to easily track CVE (=security reports) related to apps. The CPE may be obtained by searching here:
# https://nvd.nist.gov/products/cpe/search.
# For example, for Nextcloud, the CPE is 'cpe:2.3:a:nextcloud:nextcloud' (no need to include the version number)
cpe = "???"

# FIXME: optional but recommended (or remove if irrelevant / not applicable).
# This is meant to be an URL where people can financially support this app, especially when its development is based
# on volunteers and/or financed by its community. YunoHost may later advertise it in the webadmin.
fund = "???"

[integration]
yunohost = ">= 11.1.21"
# FIXME: can be replaced by a list of supported archs using the dpkg --print-architecture nomenclature (amd64/i386/armhf/arm64), for example: ["amd64", "i386"]
architectures = "all"
multi_instance = true

# FIXME: replace with true, false, or "not_relevant".
# Not to confuse with the "sso" key: the "ldap" key corresponds to wether or not a user *can* login on the app using
# its YunoHost credentials.
ldap = "?"

# FIXME: replace with true, false, or "not_relevant".
# Not to confuse with the "ldap" key: the "sso" key corresponds to wether or not a user is *automatically logged-in*
# on the app when logged-in on the YunoHost portal.
sso = "?"

# FIXME: replace with an **estimate** minimum disk and RAM requirements. e.g. 20M, 400M, 1G...
disk = "50M"
ram.build = "50M"
ram.runtime = "50M"

[install]
    [install.domain]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "domain"

    [install.path]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "path"
    default = "/example"

    [install.init_main_permission]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    # This won't be saved as setting and will instead be used to initialize the SSOwat permission
    type = "group"
    default = "visitors"

    [install.language]
    ask.en = "Choose the application language"
    ask.fr = "Choisissez la langue de l'application"
    type = "select"
    choices = ["fr", "en"]
    default = "fr"

    [install.admin]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "user"

    [install.password]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    # Note that user-provided passwords questions are not automatically saved as setting
    help.en = "Use the help field to add an information for the admin about this question."
    help.fr = "Utilisez le champ aide pour ajouter une information à l'intention de l'administrateur à propos de cette question."
    type = "password"

[resources]
    # See the packaging documentation for the full set
    # of explanation regarding the behavior and properties for each of those

    [resources.sources]

        [resources.sources.main]
        # This will pre-fetch the asset which can then be deployed during the install/upgrade scripts with :
        #    ynh_setup_source --dest_dir="$install_dir"
        # You can also define other assets than "main" and add --source_id="foobar" in the previous command
        url = "https://github.com/foo/bar/archive/refs/tags/v1.2.3.tar.gz"
        sha256 = "0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef"

        # These infos are used by https://github.com/YunoHost/apps/blob/master/tools/autoupdate_app_sources/autoupdate_app_sources.py
        # to auto-update the previous asset urls and sha256sum + manifest version
        # assuming the upstream's code repo is on github and relies on tags or releases
        # See the 'sources' resource documentation for more details

        # autoupdate.strategy = "latest_github_tag"

    [resources.system_user]
    # This will provision/deprovision a unix system user

    [resources.install_dir]
    # This will create/remove the install dir as /var/www/$app
    # and store the corresponding setting $install_dir

    [resources.data_dir]
    # This will create/remove the data dir as /home/yunohost.app/$app
    # and store the corresponding setting $data_dir

    [resources.permissions]
    # This will configure SSOwat permission for $domain/$path/
    # The initial allowed group of user is configured via the init_main_permission question (public=visitors, private=all_users)
    main.url = "/"

    [resources.ports]
    # This will pick a random port for reverse-proxying and store it as the $port setting

    [resources.apt]
    # This will automatically install/uninstall the following apt packages
    # and implicitly define the $phpversion setting as 8.0 (if phpX.Y-foobar dependencies are listed)
    packages = "deb1, deb2, php8.0-foo, php8.0-bar"

    [resources.database]
    # This will automatically provision/deprovison a MySQL DB and store the corresponding credentials in settings $db_user, $db_name, $db_pwd
    type = "mysql"

#:schema https://raw.githubusercontent.com/YunoHost/apps/master/schemas/manifest.v2.schema.json

# packaging_format = 2

# id = "mlmmj"
# name = "mlmmj"
# description.en = "Mailing List Manager Made Joyful, a simple and efficient mailing list manager."
# description.fr = "Gestionnaire de listes de diffusion efficace et simple d'utilisation."
# version = "1.4.3~ynh1"
# maintainers = [{ name = "Raph", email = "raph@raph" }]

# [upstream]
# license = "MIT"
# website = "https://codeberg.org/mlmmj/mlmmj"
# admindoc = "https://codeberg.org/mlmmj/mlmmj"
# userdoc = "https://codeberg.org/mlmmj/mlmmj"
# code = "https://codeberg.org/mlmmj/mlmmj"

# [integration]
# yunohost = ">= 11.1"
# architectures = "all"
# multi_instance = true
# ldap = "not_relevant"
# sso = "not_relevant"
# disk = "1M"
# ram.build = "1M"
# ram.runtime = "1M"

# [install]
  # [install.list_name]
  # ask.en = "Enter the name of the mailing list"
  # ask.fr = "Entrez le nom de la liste de diffusion"
  # type = "string"
  # pattern.regexp = '^[a-zA-Z0-9.-]+$'
  # pattern.error.en = "The name of the list must consist solely of letters, numbers, dots or hyphens."
  # pattern.error.fr = "Le nom de la liste doit être composé uniquement de lettres, chiffres, points ou tirets."

  # [install.domain]
  # ask.en = "Select the domain for the mailing list"
  # ask.fr = "Sélectionnez le domaine pour la liste de diffusion"
  # type = "domain"
  # # choices = "__DOMAINS__"

  # [install.language]
  # ask.en = "Choose the application language"
  # ask.fr = "Choisissez la langue de l'application"
  # type = "select"
  # choices = ["ast", "cs", "de", "en", "fi", "fr", "gr", "it", "pt", "sk", "zh-cn"]
  # default = "en"

  # [install.owner]
  # ask.en = "Select the owner of the mailing list:"
  # ask.fr = "Sélectionnez le propriétaire de la liste de diffusion :"
  # help.en = "Owners of the mailing list can be added or removed after the initial setup through the Yunohost administration interface."
  # help.fr = "Il est possible d'ajouter ou de supprimer des propriétaires de la liste de diffusion après la configuration initiale via l'interface d'administration de Yunohost."
  # type = "user"


[resources]
  # [resources.sources.main]
  # url = "https://codeberg.org/mlmmj/mlmmj/releases/download/RELEASE_1_4_3/mlmmj-1.4.3.tar.xz"
  # sha256 = "dcaee66232fa1d10d9d2352ceb03b05879dfba978368988af585b0697506f4a1"
  # format = "tar.xz"
  # in_subdir = true

  [resources.system_user]
  # allow_ssh = true

  [resources.install_dir]

  # [resources.data_dir]
  # subdirs = ['incoming', 'queue', 'queue/discarded', 'archive', 'text', 'subconf', 'unsubconf', 'bounce', 'control', 'moderation', 'subscribers.d', 'digesters.d', 'requeue', 'nomailsubs.d', 'ynh']
  # owner = "list:rwx"
  # group = "list:rx"
