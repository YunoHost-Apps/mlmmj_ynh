#!/bin/bash

#=================================================
# INSTALL
#=================================================

# Import YunoHost helpers
source /usr/share/yunohost/helpers
source _common.sh

# -------------------------------------------------------------
# Check list main email address validity
# First it checks that the address is available
# Next it checks that the domain is managed by the ynh instance
# Then it checks that the domain has mail in and out set up
# -------------------------------------------------------------

ynh_script_progression --message="Check list email address validity;" 

if ! is_valid_list_email "$list_email"; then
    ynh_die --message="Please choose an available email address"
else
    ynh_print_info --message="The email '$list_email' is available."
fi

if ! is_domain_managed_by_yunohost "$domain_part"; then
    ynh_die --message="Please add $domain_part in this Yunohost instance domains list."
else
    ynh_print_info --message="The domain '$domain_part' is managed by this Yunohost instance."
fi

# if ! is_domain_mail_set "$domain_part"; then
#     ynh_die --message="Please check the mail configurations for the domain $domain_part."
# else
#     ynh_print_info --message="The domain '$domain_part' is correctly set up with mail in and mail out."
# fi

if ! is_incoming_mail_enabled "$domain_part"; then
    ynh_die --message="Mail in is not activated for the domain $domain_part. Please enable it."
elif ! is_outgoing_mail_enabled "$domain_part"; then
    ynh_die --message="Mail out is not activated for the domain $domain_part. Please enable it."
else
    ynh_print_info --message="The domain '$domain_part' is correctly set up with mail in and mail out."
fi

# -------------------------------------------------------------
# Download and compile MLMMJ and setup postfix tables
# -------------------------------------------------------------


ynh_script_progression --message="Source download and binaries compilation;" --weight=5

install_update_mlmmj

# -------------------------------------------------------------
# Setting up postfix with new transport and virtual tables
# -------------------------------------------------------------

ynh_script_progression --message="Setting up postfix with new transport and virtual tables;"

ynh_add_config --template="regenconf_postfix" --destination="$regen_conf_file"
yunohost tools regen-conf postfix

[ ! -d "$tables_dir" ] && mkdir -p "$tables_dir"

[ ! -f "$transport_file" ] && touch "$transport_file"
[ ! -f "$virtual_file" ] && touch "$virtual_file"

if ! grep -qF "$transport_entry" "$transport_file"; then
    echo "$transport_entry" >> "$transport_file"
    postmap "$transport_file"
fi

if ! grep -qF "$virtual_entry" "$virtual_file"; then
    echo "$virtual_entry" >> "$virtual_file"
    postmap "$virtual_file"
fi

chgrp postfix $install_dir
chown $app:postfix $install_dir/tables -R


# -------------------------------------------------------------
# Language, default settings and ynh config files
# -------------------------------------------------------------

ynh_script_progression --message="Language, default settings and ynh config files;"

if [ -d "$lang_dir" ]; then
    cp "$lang_dir"/* "$data_dir/text"
fi

ynh_app_setting_set -a $app -k category -v "subscribers"
ynh_app_setting_set -a $app -k display_subscribers -v false
ynh_app_setting_set -a $app -k display_digesters -v false
ynh_app_setting_set -a $app -k display_nomailsubs -v false

# create mlmmj control file
touch "$control_dir/moderators"
touch "$control_dir/subonlypost"
echo "[$local_part]" > "$control_dir/prefix"
touch "$data_dir/control/owner"
touch "$control_dir/notifysub"
touch "$control_dir/subonlyget"
echo "postfix" > "$control_dir/verp"
touch "$control_dir/nodigestsub"
touch "$control_dir/nonomailsub"
echo "10485760" > "$control_dir/maxmailsize"  # 10MB
# create ynh helper files
mkdir -p $ynh_dir
touch $ynh_dir/listaddress.txt
touch $ynh_dir/moderators.txt
touch $ynh_dir/submod.txt
touch $ynh_dir/subscribers.txt
touch $ynh_dir/digesters.txt
touch $ynh_dir/nomailsubs.txt
# useful stuff for ssh management
mkdir $install_dir/bin
ln -s $data_dir $install_dir/files
#cp /etc/skel/.bashrc $install_dir
#cp /etc/skel/.profile $install_dir


[ -f "../conf/footer_${language}.tpl" ] && footer_template="footer_${language}.tpl" || footer_template="footer_en.tpl"
ynh_add_config --template="$footer_template" --destination="$control_dir/footer"

echo "$(yunohost user info "$owner" --output-as plain | awk '/^#mail/ { getline; print $1; exit }')" | tee "$data_dir/control/owner" > "$ynh_dir/owner.txt"
echo "$list_email" | tee "$data_dir/control/listaddress" > "$ynh_dir/listaddress.txt"

# -------------------------------------------------------------
# Cron and SSH user password
# -------------------------------------------------------------

ynh_script_progression --message="Configuring Cron and SSH user;"

#ssh_pass=$(ynh_string_random --length=24)
#ssh_pass=$(openssl rand -base64 12)
#chpasswd <<< "${app}:${ssh_pass}"
usermod -s /bin/bash $app

rand_min=$(shuf -i 0-59 -n 1) # Generate random minute execution (between 0 and 59)
echo "$rand_min */2 * * * $app $mlmmjmaintd -F -L $data_dir" > "$cron_file" 


# -------------------------------------------------------------
# Install completion
# -------------------------------------------------------------

ynh_script_progression --message="Mailing list $list_email was created successfully." --last
