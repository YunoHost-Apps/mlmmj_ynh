#!/bin/bash

# -------------------------------------------------------------
# mlmmj installation script for YunoHost
# -------------------------------------------------------------

# Import YunoHost helpers
source /usr/share/yunohost/helpers

# -------------------------------------------------------------
# Variables
# -------------------------------------------------------------



INSTALLED_VERSION=""
REQUIRED_VERSION="1.4.0.rc2"

# -------------------------------------------------------------
# Check name validity
# -------------------------------------------------------------
# Check if the list name is a valid and not a user name
is_valid_listname() {
    # Check format
    if ! [[ $1 =~ ^[a-z0-9]+([.-][a-z0-9]+)*$ ]]; then
        ynh_print_err --message="Invalid mailing list name. It must be lowercase and can only contain letters, numbers, dots, and dashes."
        return 1
    fi

    # Check if name is a username
    if yunohost user list --output-as plain | grep -q "^$1$"; then
        ynh_print_err --message="The mailing list name '$1' is already in use as a username. Please choose a different name."
        return 1
    fi

    return 0
}

# Check the list name
ynh_print_info --message="Validating list name: $list_name"
if ! is_valid_listname "$list_name"; then
    ynh_die --message="Validation failed for list name: $list_name"
fi

# -------------------------------------------------------------
# Installing MLMMJ Binaries If Necessary
# -------------------------------------------------------------
ynh_script_progression --message="Checking existing mlmmj binaries;"

if command -v mlmmj-list >/dev/null 2>&1; then
    INSTALLED_VERSION=$(mlmmj-list -V | cut -d ' ' -f3)
    ynh_script_progression --message="mlmmj is already installed with version: $INSTALLED_VERSION"
    
    if [ "$REQUIRED_VERSION" != "$INSTALLED_VERSION" ]; then
        ynh_script_progression --message="Updating mlmmj to the required version;"
    fi
else
    ynh_script_progression --message="mlmmj is not installed, proceeding with installation;" -t
fi

if [ "$REQUIRED_VERSION" != "$INSTALLED_VERSION" ]; then
    ynh_script_progression --message="Installing necessary packages" -t -w 5
    ynh_install_app_dependencies autoconf make gcc pkg-config libatf-dev
    ynh_script_progression --message="Downloading and installing mlmmj release;" -t
    ynh_setup_source --dest_dir="mlmmj-latest"|| ynh_die "Failed to download mlmmj"
    pushd mlmmj-latest
    autoreconf -i && ./configure && make && sudo make install || ynh_die "Failed to install mlmmj binaries"
    popd
    ynh_secure_remove mlmmj-latest
fi

# -------------------------------------------------------------
# Mailing List Creation and Activation
# -------------------------------------------------------------

TEXTPATH="/usr/local/share/mlmmj/text.skel/$language"

ynh_script_progression --message="Creating the necessary directories in $install_dir;" -t
for DIR in incoming queue queue/discarded archive text subconf unsubconf \
           bounce control moderation subscribers.d digesters.d requeue \
           nomailsubs.d
do
    mkdir -p "$install_dir/$DIR"
done

ynh_script_progression --message="Configuring the list $list_name@$domain" -t
echo "postmaster" > "$install_dir/control/owner"
echo "$list_name@$domain" > "$install_dir/control/listaddress"

ynh_script_progression --message="Copying localized content ($language) into $TEXTPATH;" -t
if [ -d "$TEXTPATH" ]; then
    cp "$TEXTPATH"/* "$install_dir/text"
fi

# -------------------------------------------------------------
# Setting up conf files transport et virtual
# -------------------------------------------------------------

CONF_DIR="$APP_ROOT/$conf"
TRANSPORT_FILE="$CONF_DIR/transport"
VIRTUAL_FILE="$CONF_DIR/virtual"
TRANSPORT_ENTRY="$domain--$list_name@localhost.mlmmj       mlmmj:$app"
VIRTUAL_ENTRY="$list_name@$domain    $domain--$list_name@localhost.mlmmj"

if [ ! -d "$CONF_DIR" ]; then
    mkdir -p "$CONF_DIR"
fi

ynh_script_progression --message="Conf files update;" -t
if ! grep -qF "$TRANSPORT_ENTRY" "$TRANSPORT_FILE"; then
    echo "$TRANSPORT_ENTRY" >> "$TRANSPORT_FILE"
fi

# Ajouter l'entrÃ©e dans virtual si elle n'existe pas
if ! grep -qF "$VIRTUAL_ENTRY" "$VIRTUAL_FILE"; then
    echo "$VIRTUAL_ENTRY" >> "$VIRTUAL_FILE"
fi

# -------------------------------------------------------------
# Symlinks for easier CLI administration
# -------------------------------------------------------------
SYMLINK_DIR="$APP_ROOT/$domain"
if [ ! -d "$SYMLINK_DIR" ]; then
    mkdir -p "$SYMLINK_DIR"
fi
ln -s "$install_dir" "$SYMLINK_DIR/$list_name"


# -------------------------------------------------------------
# Cron
# -------------------------------------------------------------

MLMMJRECEIVE="/usr/local/bin/mlmmj-receive"
MLMMJMAINTD="/usr/local/bin/mlmmj-maintd"

ynh_script_progression --message="Adding cron file;" -t
# Generate random minute execution (between 0 and 59)
rand_min=$(shuf -i 0-59 -n 1)
cron_path="/etc/cron.d/$app"
mkdir -p $cron_path
printf "$rand_min */2 * * * root $MLMMJMAINTD -F -L $install_dir" > "$cron_path/mlmmj.cron" 
chown root:root "$cron_path"
chmod 644 "$cron_path"

echo "$list_name@$domain" > "$install_dir/README_$list_name.md"
# -------------------------------------------------------------
# mlmmj installation script for YunoHost
# -------------------------------------------------------------

ynh_script_progression --message="Mailing list $list_name@$domain was created successfully." --last -t
