#!/bin/bash

# -------------------------------------------------------------
# mlmmj installation script for YunoHost
# -------------------------------------------------------------

# Import YunoHost helpers
source /usr/share/yunohost/helpers

# -------------------------------------------------------------
# Variables
# -------------------------------------------------------------
LISTNAME=$(ynh_app_setting_get --app=$app --key=list_name | tr '[:upper:]' '[:lower:]') # Convert to lowercase
FQDN=$(ynh_app_setting_get --app=$app --key=domain)
LANG=$(ynh_app_setting_get --app=$app --key=language)
INSTALL_DIR=$(ynh_app_setting_get --app=$app --key=install_dir)

TEXTPATH="/usr/local/share/mlmmj/text.skel/$language"
MLMMJRECEIVE="/usr/local/bin/mlmmj-receive"
MLMMJMAINTD="/usr/local/bin/mlmmj-maintd"
ALIAS="$list_name: \"|$MLMMJRECEIVE -L $install_dir/\""
ALIASFILE="/etc/aliases"

INSTALLED_VERSION=""
REQUIRED_VERSION="1.4.0.rc2"

# -------------------------------------------------------------
# Check name validity
# -------------------------------------------------------------
# Check if the list name is a valid and not a user name
is_valid_listname() {
    # Check format
    if ! [[ $1 =~ ^[a-z0-9]+([.-][a-z0-9]+)*$ ]]; then
        ynh_print_err --message="Invalid mailing list name. It must be lowercase and can only contain letters, numbers, dots, and dashes."
        return 1
    fi

    # Check if name is a username
    if yunohost user list --output-as plain | grep -q "^$1$"; then
        ynh_print_err --message="The mailing list name '$1' is already in use as a username. Please choose a different name."
        return 1
    fi

    return 0
}

# Check the list name
ynh_print_info --message="Validating list name: $LISTNAME"
if ! is_valid_listname "$LISTNAME"; then
    ynh_die --message="Validation failed for list name: $LISTNAME"
fi

# -------------------------------------------------------------
# Installing MLMMJ Binaries If Necessary
# -------------------------------------------------------------
ynh_script_progression --message="Checking existing mlmmj binaries;"

if command -v mlmmj-list >/dev/null 2>&1; then
    INSTALLED_VERSION=$(mlmmj-list -V | cut -d ' ' -f3)
    ynh_script_progression --message="mlmmj is already installed with version: $INSTALLED_VERSION"
    
    if [ "$REQUIRED_VERSION" != "$INSTALLED_VERSION" ]; then
        ynh_script_progression --message="Updating mlmmj to the required version;"
    fi
else
    ynh_script_progression --message="mlmmj is not installed, proceeding with installation;" -t
fi

if [ "$REQUIRED_VERSION" != "$INSTALLED_VERSION" ]; then
    ynh_script_progression --message="Installing necessary packages" -t -w 5
    ynh_install_app_dependencies autoconf make gcc pkg-config libatf-dev
    ynh_script_progression --message="Downloading and installing mlmmj release;" -t
    ynh_setup_source --dest_dir="mlmmj-latest"|| ynh_die "Failed to download mlmmj"
    pushd mlmmj-latest
    autoreconf -i && ./configure && make && sudo make install || ynh_die "Failed to install mlmmj binaries"
    popd
    ynh_secure_remove mlmmj-latest
fi

# -------------------------------------------------------------
# Mailing List Creation and Activation
# -------------------------------------------------------------
ynh_script_progression --message="Creating the necessary directories in $INSTALL_DIR;" -t
for DIR in incoming queue queue/discarded archive text subconf unsubconf \
           bounce control moderation subscribers.d digesters.d requeue \
           nomailsubs.d
do
    mkdir -p "$INSTALL_DIR/$DIR"
done

ynh_script_progression --message="Configuring the list $LISTNAME@$FQDN" -t
echo "postmaster" > "$INSTALL_DIR/control/owner"
echo "$LISTNAME@$FQDN" > "$INSTALL_DIR/control/listaddress"

ynh_script_progression --message="Copying localized content ($LANG) into $TEXTPATH;" -t
if [ -d "$TEXTPATH" ]; then
    cp "$TEXTPATH"/* "$INSTALL_DIR/text"
fi

ynh_script_progression --message="Updating $ALIASFILE and running newaliases;" -t
printf "$ALIAS\n" >> $ALIASFILE
newaliases || ynh_die "Failed to run newaliases"

ynh_script_progression --message="Updating permissions" -t
chown -R nobody:nogroup "$INSTALL_DIR"

ynh_script_progression --message="Adding cron file;" -t
# Generate random minute execution (between 0 and 59)
rand_min=$(shuf -i 0-59 -n 1)
cron_path="/etc/cron.d/$app"
mkdir -p $cron_path
printf "$rand_min */2 * * * root $MLMMJMAINTD -F -L $INSTALL_DIR" > "$cron_path/mlmmj.cron" 
chown root:root "$cron_path"
chmod 644 "$cron_path"

echo "$LISTNAME@$FQDN" > "$INSTALL_DIR/README_$LISTNAME.md"
# -------------------------------------------------------------
# mlmmj installation script for YunoHost
# -------------------------------------------------------------

ynh_script_progression --message="Mailing list $LISTNAME@$FQDN was created successfully." --last -t
