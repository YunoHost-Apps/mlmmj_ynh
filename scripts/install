#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

# -------------------------------------------------------------
# Check list main email address validity
# First it checks that the address is available
# Next it checks that the domain is managed by the ynh instance
# Then it checks that the domain has mail in and out set up
# -------------------------------------------------------------

ynh_script_progression --message="Validating install parameters"

ynh_app_setting_set_default --key=local_part --value="${list_email%@*}"
ynh_app_setting_set_default --key=domain_part --value="${list_email#*@}"

if ! is_valid_list_email "$list_email"; then
    ynh_die --message="Please choose an available email address"
else
    echo "The email '$list_email' is available."
fi

if ! is_domain_managed_by_yunohost "$domain_part"; then
    ynh_die --message="Please add $domain_part in this Yunohost instance domains list."
else
    echo "The domain '$domain_part' is managed by this Yunohost instance."
fi

if ! is_incoming_mail_enabled "$domain_part"; then
    ynh_die --message="Mail in is not activated for the domain $domain_part. Please enable it."
elif ! is_outgoing_mail_enabled "$domain_part"; then
    ynh_die --message="Mail out is not activated for the domain $domain_part. Please enable it."
else
    echo "The domain '$domain_part' is correctly set up with mail in and mail out."
fi

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..."

ynh_install_nodejs --nodejs_version=$nodejs_version

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..."

ynh_setup_source --dest_dir="$install_dir" --source_id="web"

chown -R "$app:www-data" "$install_dir"

# -------------------------------------------------------------
# Download and compile MLMMJ and setup postfix tables
# -------------------------------------------------------------

ynh_script_progression --message="Building $app" --weight=5

install_update_mlmmj

ynh_script_progression --message="Creating list"

create_list

#=================================================
# APP INITIAL CONFIGURATION
#=================================================
ynh_script_progression --message="Adding $app's configuration files..." --weight=1

ynh_add_config --template="config.json" --destination="$install_dir/config.json"

chmod 400 "$install_dir/config.json"
chown $app:$app "$install_dir/config.json"

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression --message="Adding system configurations related to $app..." --weight=1

ynh_add_nginx_config

ynh_add_systemd_config

yunohost service add "$app" --description="Frontend for Mlmmj mailing list management" --log="/var/log/$app/$app.log"

#=================================================
# INSTALL NODE PACKAGES
#=================================================
ynh_script_progression --message="Installing Node.js packages..." --weight=10

pushd "$install_dir"
    ynh_use_nodejs
    ynh_exec_warn_less ynh_exec_as $app $ynh_node_load_PATH $ynh_npm install
popd

# -------------------------------------------------------------
# Setting up postfix with new transport and virtual tables
# -------------------------------------------------------------

ynh_script_progression --message="Configuring postfix"

ynh_add_config --template="regenconf_postfix" --destination="/usr/share/yunohost/hooks/conf_regen/98-postfix_$app"
yunohost tools regen-conf postfix

# -------------------------------------------------------------
# Cron
# -------------------------------------------------------------

ynh_script_progression --message="Configuring Cron"

rand_min=$(shuf -i 0-59 -n 1) # Generate random minute execution (between 0 and 59)
echo "$rand_min */2 * * * $app $install_dir/app/bin/mlmmj-maintd -F -L $install_dir/list" > "/etc/cron.d/$app" 

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting $app's systemd service..." --weight=1

ynh_add_systemd_config
ynh_systemd_action --service_name=$app --action="start" --log_path="systemd"

# -------------------------------------------------------------
# Install completion
# -------------------------------------------------------------

ynh_script_progression --message="Mailing list $list_email was created successfully." --last
