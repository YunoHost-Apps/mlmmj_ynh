#!/bin/bash

# Import YunoHost helpers
source /usr/share/yunohost/helpers
source _common.sh

ynh_abort_if_errors

# -------------------------------------------------------------
# Getters
# -------------------------------------------------------------

get__closedlist() {
    if [ -f "$control_dir/closedlist" ]; then
        echo "1"
    else
        echo "0"
    fi
}

get__prefix() {
    local prefix_file="$control_dir/prefix"
    if [ -f "$prefix_file" ]; then
        head -n 1 "$prefix_file"  # Lit uniquement la première ligne
    else
        echo ""  # Retourne une chaîne vide si le fichier n'existe pas
    fi
}

get__moderated() {
    if [ -f "$control_dir/moderated" ]; then
        echo "1"
    else
        echo "0"
    fi
}

# -------------------------------------------------------------
# Setters
# -------------------------------------------------------------

set__closedlist() {
    if [[ $closedlist == 1 ]]; then
        touch "$control_dir/closedlist"
        ynh_print_info "--message='Created $control_dir/closedlist for closedlist'"
    else
        ynh_secure_remove "$control_dir/closedlist"
        ynh_print_info "--message='Removed $control_dir/closedlist for closedlist'"
    fi
}

set__prefix() {
    local prefix_file="$control_dir/prefix"
    if [ -n "$prefix" ]; then
        echo "$prefix" > "$prefix_file"  # Écrit la valeur dans la première ligne
        ynh_print_info "--message='Prefix set to $prefix in $prefix_file'"
    else
        ynh_secure_remove "$prefix_file"  # Supprime le fichier si la chaîne est vide
        ynh_print_info "--message='Prefix file $prefix_file removed'"
    fi
}

set__moderated() {
    if [[ $moderated == 1 ]]; then
        touch "$control_dir/moderated"
        ynh_print_info "--message='Created $control_dir/moderated for moderated'"
    else
        ynh_secure_remove "$control_dir/moderated"
        ynh_print_info "--message='Removed $control_dir/moderated for moderated'"
    fi
}

# Execute the appropriate step
ynh_app_config_run $1
