#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

# -------------------------------------------------------------
# Validators
# -------------------------------------------------------------

validate__list_addresses() {
    validate__email_generic "$list_adresses"
}

validate__submod_list() {
    validate__email_generic "$submod_list"
}

validate__moderators() {
    validate__email_generic "$moderators"
}

validate__add_subscribers() {
    validate__email_generic "$add_subscribers"
}

validate__del_subscribers() {
    validate__email_generic "$del_subscribers"
}

# -------------------------------------------------------------
# Getters
# -------------------------------------------------------------

# General

get__sub_policy() {
    get_3choices "open" "closedlistsub" "closedlist"
}

get__post_policy() {
    get_3choices "all" "subonlypost" "modonlypost"
}

# Owners

get__notifysub() {
    get_flag "notifysub"
}

get__submod() {
    get_flag "submod"
}

# Moderators

get__modnonsubposts() {
    get_flag "modnonsubposts"
}

get__moderated() {
    get_flag "moderated"
}

get__notifymod() {
    get_flag "notifymod"
}

# Sub

get__add_subscribers() {
    echo ""
}

get__del_subscribers() {
    echo ""
}

get__display_subscribers() {
    echo ""
}

get__subscribers_list() {
    
    # cf http://mlmmj.org/mlmmj-list.html
    $install_dir/app/bin/mlmmj-list -L $data_dir -s
    $install_dir/app/bin/mlmmj-list -L $data_dir -d
    $install_dir/app/bin/mlmmj-list -L $data_dir -n

}

# -------------------------------------------------------------
# Setters
# -------------------------------------------------------------

# General

set__sub_policy() {
    set_3choices "open" "closedlistsub" "closedlist" "$list_status"
}

set__post_policy() {
    set_3choices "all" "subonlypost" "modonlypost" "$post_policy"
}

# Owners

set__notifysub() {
    set_flag "notifysub" "$notifysub"
}

set__submod() {
    if [[ $submod == 1 ]]; then
        if [[ -n "$submod_list" ]]; then
            echo "$submod_list" > "$data_dir/control/submod"
        else
            echo "" > "$data_dir/control/submod"
        fi
    else
        ynh_secure_remove "$data_dir/control/submod"
    fi
}

# Moderation

set__modnonsubposts() {
    set_flag "modnonsubposts" "$modnonsubposts"
}

set__moderated() {
    set_flag "moderated" "$moderated"
}

set__notifymod() {
    set_flag "notifymod" "$notifymod"
}

# Advanced

# sub

set__add_subscribers() {
    while IFS= read -r email; do
        sudo -u $app $bin_dir/mlmmj-sub -L $data_dir -a $email -c -s -U
    done <<< "$add_subscribers"
}

set__del_subscribers() {
    while IFS= read -r email; do
        $bin_dir/mlmmj-unsub -L $data_dir -a $email -c -N -s
    done <<< "$del_subscribers"
}

# -------------------------------------------------------------
# Generic variables and functions
# -------------------------------------------------------------

# Regex pour les adresses email
email_regex='^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'

validate__email_generic() {
    local email_list="$1"
    local invalid_emails=""
    while IFS= read -r email; do
        if [[ ! $email =~ $email_regex ]] && [[ ! -z "$email" ]]; then
            invalid_emails+="$email\n"
        fi
    done <<< "$email_list"

    if [[ ! -z "$invalid_emails" ]]; then
        echo -e "Invalid email addresses:\n$invalid_emails"
    fi
}

# check_list_setup_from_file() {
#     local list_addresses_file="$1" # Chemin vers le fichier contenant les adresses e-mail
#     local first_line=true # Flag pour traiter différemment la première ligne

#     # Lire le fichier ligne par ligne
#     while IFS= read -r list_email || [[ -n "$list_email" ]]; do
#         local domain_part="${list_email#*@}" # Extrait le domaine de l'adresse e-mail

#         # Vérification de la disponibilité de l'adresse e-mail
#         if ! is_valid_list_email "$list_email"; then
#             ynh_die --message="The email address '$list_email' is not available. Please choose a different email address."
#         else
#             ynh_print_info --message="The email address '$list_email' is available."
#         fi

#         # Vérification que le domaine est géré par Yunohost
#         if ! is_domain_managed_by_yunohost "$domain_part"; then
#             ynh_die --message="The domain '$domain_part' is not managed by this Yunohost instance. Please add it to the Yunohost domains list."
#         fi

#         # Pour la première ligne uniquement, vérifiez le mail out
#         if [ "$first_line" = true ]; then
#             if ! is_outgoing_mail_enabled "$domain_part"; then
#                 ynh_die --message="Mail out is not activated for the domain $domain_part. Please enable it."
#             else
#                 ynh_print_info --message="Mail out is enabled for the domain '$domain_part'."
#             fi
#             first_line=false # Reset le flag après la première ligne
#         fi

#         # Vérification que le domaine a bien le mail in activé
#         if ! is_incoming_mail_enabled "$domain_part"; then
#             ynh_die --message="Mail in is not activated for the domain $domain_part. Please enable it."
#         else
#             ynh_print_info --message="Mail in is enabled for the domain '$domain_part'."
#         fi

#     done < "$list_addresses_file"
# }

get_flag() {
    local flag_name="$1"
    if [ -f "$data_dir/control/$flag_name" ]; then
        echo "1"
    else
        echo "0"
    fi
}

set_flag() {
    local flag_name="$1"
    local flag_value="$2"

    if [[ $flag_value == 1 ]]; then
        touch "$data_dir/control/$flag_name"
        #ynh_print_info "--message='Created $data_dir/control/$flag_name'"
    else
        ynh_secure_remove "$data_dir/control/$flag_name"
        #ynh_print_info "--message='Removed $data_dir/control/$flag_name'"
    fi
}

get_3choices() {
    local choice1="$1"
    local choice2_file="$2"
    local choice3_file="$3"


    if [ -f "$data_dir/control/$choice3_file" ]; then
        echo "$choice3_file"
    elif [ -f "$data_dir/control/$choice2_file" ]; then
        echo "$choice2_file"
    else
        echo "$choice1"
    fi
}

set_3choices() {
    local choice1_file="$1"
    local choice2_file="$2"
    local choice3="$3"
    local config_value="$4"

    case $config_value in
        "$choice3")
            ynh_secure_remove "$data_dir/control/$choice1_file"
            ynh_secure_remove "$data_dir/control/$choice2_file"
            #ynh_print_info "--message='Removed $data_dir/control/$choice1_file and/or $data_dir/control/$choice2_file'"
            ;;

        "$choice1_file")
            touch "$data_dir/control/$choice1_file"
            ynh_secure_remove "$data_dir/control/$choice2_file"
            #ynh_print_info "--message='Created $data_dir/control/$choice1_file and removed $data_dir/control/$choice2_file if needed'"
            ;;

        "$choice2_file")
            touch "$data_dir/control/$choice2_file"
            ynh_secure_remove "$data_dir/control/$choice1_file"
            #ynh_print_info "--message='Created $data_dir/control/$choice2_file and removed $data_dir/control/$choice1_file if needed'"
            ;;
    esac
}

get_textfile() {
    local file_name="$1"
    local file_path="$data_dir/control/$file_name"

    if [ -f "$file_path" ]; then
        cat "$file_path"
    else
        echo ""
    fi
}


# -------------------------------------------------------------
# Config apply
# -------------------------------------------------------------

ynh_app_config_run $1
